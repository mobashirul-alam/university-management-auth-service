{"level":"info","message":"Database is connected successfully"}
{"level":"info","message":"Application is listening on port 5000"}
{"level":"error","message":"Failed to connect database The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at _createMongoClient (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:804:11)\n    at NativeConnection.openUri (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:741:29)\n    at Mongoose.connect (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\index.js:404:15)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:20\n    at Generator.next (<anonymous>)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:4:12)\n    at bootstrap (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:20:12)\n    at Object.<anonymous> (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:19:1)"}
{"level":"error","message":"Failed to connect database The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at _createMongoClient (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:804:11)\n    at NativeConnection.openUri (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:741:29)\n    at Mongoose.connect (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\index.js:404:15)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:20\n    at Generator.next (<anonymous>)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:4:12)\n    at bootstrap (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:20:12)\n    at Object.<anonymous> (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:19:1)"}
{"level":"info","message":"Database is connected successfully"}
{"level":"info","message":"Application is listening on port 5000"}
{"level":"info","message":"Database is connected successfully"}
{"level":"info","message":"Application is listening on port 5000"}
{"level":"error","message":"Failed to connect database The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.","stack":"MongooseError: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n    at _createMongoClient (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:804:11)\n    at NativeConnection.openUri (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\connection.js:741:29)\n    at Mongoose.connect (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\node_modules\\mongoose\\lib\\index.js:404:15)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:20\n    at Generator.next (<anonymous>)\n    at E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:4:12)\n    at bootstrap (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:20:12)\n    at Object.<anonymous> (E:\\NextLevelWebDevelopment\\UniversityManagementApp\\university-management-auth-service\\src\\server.ts:19:1)"}
{"level":"info","message":"Database is connected successfully"}
{"level":"info","message":"Application is listening on port 5000"}
{"level":"info","message":"Database is connected successfully"}
{"level":"info","message":"Application is listening on port 5000"}
